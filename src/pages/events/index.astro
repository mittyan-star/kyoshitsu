---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { breadcrumbSchema } from '../../lib/schema';

const events = await getCollection('events');

const toDate = (value?: string) => (value ? new Date(value) : undefined);
const today = new Date();
today.setHours(0, 0, 0, 0);

const sortedEvents = [...events].sort((a, b) => {
  const aDate = toDate(a.data.startDate)?.getTime() ?? Number.MAX_SAFE_INTEGER;
  const bDate = toDate(b.data.startDate)?.getTime() ?? Number.MAX_SAFE_INTEGER;
  return aDate - bDate;
});

const upcomingEvents = sortedEvents.filter(({ data }) => {
  const start = toDate(data.startDate);
  if (!start) return true;
  return start.getTime() >= today.getTime();
});

const pastEvents = sortedEvents.filter(({ data }) => {
  const start = toDate(data.startDate);
  if (!start) return false;
  return start.getTime() < today.getTime();
});

const structuredData = [
  breadcrumbSchema([
    { name: 'ホーム', item: 'https://example.com/' },
    { name: 'イベント', item: 'https://example.com/events' },
  ]),
  {
    '@context': 'https://schema.org',
    '@type': 'ItemList',
    name: 'イベント一覧',
    itemListElement: sortedEvents.map((entry, index) => ({
      '@type': 'ListItem',
      position: index + 1,
      url: `https://example.com/events/${entry.slug}`,
      name: entry.data.title,
    })),
  },
];
---
<BaseLayout
  title="イベント一覧｜Cosmos Party・体験会・地域連携"
  description="Cosmos Partyや体験会、地域連携イベントの予定一覧。みっちゃん塾の最新イベント情報を掲載します。"
  path="/events"
  summary="Cosmos Party・探究発表・地域コラボイベントの最新スケジュールをこちらで随時更新します。"
  breadcrumbs={[{ href: '/events', label: 'イベント' }]}
  structuredData={structuredData}
>
  <section class="section">
    <h1 class="text-3xl font-bold text-slate-900">開催予定イベント</h1>
    <ul class="space-y-4">
      {upcomingEvents.map(({ slug, data }) => (
        <li class="rounded-lg border border-slate-200 bg-white p-4 shadow-sm">
          <a href={`/events/${slug}`} class="text-lg font-semibold text-blue-700">{data.title}</a>
          <p class="mt-1 text-sm text-slate-600">{data.description}</p>
          <p class="mt-2 text-xs text-slate-500">{data.startDate} @ {data.location}</p>
        </li>
      ))}
      {upcomingEvents.length === 0 && (
        <li class="rounded-lg border border-dashed border-slate-200 bg-white p-4 text-sm text-slate-500">
          現在募集中のイベントはありません。メールマガジンとLINEで優先的に告知します。
        </li>
      )}
    </ul>
  </section>

  {pastEvents.length > 0 && (
    <section class="section">
      <h2 class="text-2xl font-semibold text-slate-900">これまでの開催</h2>
      <ul class="space-y-4">
        {pastEvents.map(({ slug, data }) => (
          <li class="rounded-lg border border-slate-100 bg-white/70 p-4 shadow-sm">
            <a href={`/events/${slug}`} class="text-lg font-semibold text-blue-700">{data.title}</a>
            <p class="mt-1 text-sm text-slate-600">{data.description}</p>
            <p class="mt-2 text-xs text-slate-500">{data.startDate} 開催 @ {data.location}</p>
          </li>
        ))}
      </ul>
    </section>
  )}
</BaseLayout>
